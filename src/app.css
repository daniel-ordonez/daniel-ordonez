@font-face {
  font-family: Afacad;
  src: url("./fonts/Afacad-VariableFont_wght.ttf");
  src: url("./assets/fonts/Afacad-VariableFont_wght.ttf");
  src: url("../fonts/Afacad-VariableFont_wght.ttf");
  src: url("../assets/fonts/Afacad-VariableFont_wght.ttf");
}
:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: dark light;
  color: rgba(250, 250, 250, 0.8);
  background-color: #242424;
  --g-main: radial-gradient(var(--bg-accent) var(--bg-accent-value), hsl(220, 27%, 1%) 40%);
  --hsl-accent: 355, 70%, 48%;
  --c-accent: hsl(var(--hsl-accent));


  --hsl-input--ok: 160, 43%, 78%;
  --hsl-input--ok-focus: 160, 43%, 90%;

  --hsl-input--err: 355, 50%, 80%;
  --hsl-input--err-focus: 355, 50%, 90%;

  --hsl-input--base: 160, 10%, 70%;
  --hsl-input--base-focus: 160, 10%, 90%;

  --hsl-form: var(--hsl-input--base);
  --hsl-form-focus: var(--hsl-input--base-focus);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


@property --bg-c-accent {
  syntax: "<color>";
  inherits: false;
  initial-value: hsl(160, 18%, 10%);
}
@property --bg-c-accent-value {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 15%;
}
@property --bg-c-base {
  syntax: "<color>";
  inherits: false;
  initial-value: hsl(160, 18%, 10%);
}
@property --bg-c-base-value {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 40%;
}


@media (prefers-color-scheme: dark) {
  main {
    --bg-c-accent: hsl(190, 14%, 10%);
    --bg-c-base: hsl(210, 11%, 1%);
    --bg-c-accent-value: 15%;
    --bg-c-base-value: 50%;
  }
  :root[theme="light"] main{
    --bg-c-accent: hsl(233, 12%, 85%);
    --bg-c-base: hsl(255, 4%, 69%);
    --bg-c-accent-value: 35%;
    --bg-c-base-value: 110%;
    color: rgba(250, 250, 250, 0.9);
  }
}
@media (prefers-color-scheme: light) {
  main {
    --bg-c-accent: hsl(233, 12%, 85%);
    --bg-c-base: hsl(255, 4%, 69%);
    --bg-c-accent-value: 35%;
    --bg-c-base-value: 110%;
    color: rgba(250, 250, 250, 0.9);
  }
  :root[theme="dark"] main{
    --bg-c-accent: hsl(190, 14%, 10%);
    --bg-c-base: hsl(210, 11%, 1%);
    --bg-c-accent-value: 15%;
    --bg-c-base-value: 50%;
  }
}



dialog {
  margin: auto;
  border: none;
  outline: none;
  background: none;
  overflow: hidden;
}


dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.6);
  pointer-events: none;
  backdrop-filter: blur(0px)  saturate(1);
  transition:
    display 0s allow-discrete,
    overlay 0s allow-discrete,
    backdrop-filter .3s ease;
}
dialog[open]::backdrop {
  backdrop-filter: blur(2px)  saturate(0.9);
}

@starting-style {
  dialog[open]::backdrop {
    backdrop-filter: blur(0px)  saturate(1);
  }
}



label {
  display: flex;
  flex-direction: column-reverse;
  justify-content: start;
  text-align: left;
  color: hsl(var(--hsl-form));
}
input,
textarea {
  border: none;
  outline: none;
  appearance: unset;
  padding: 10px;
  background-color: hsl(var(--hsl-form));
  border-radius: 6px;
  will-change: box-shadow;
  transition: all 200ms ease-in-out;
  color: var(--bg-form);
}

input:focus,
textarea:focus {
  --hsl-form: var(--hsl-form-focus);
  box-shadow:
    hsla(var(--hsl-form), 0.2) 0px 5px,
    hsla(var(--hsl-form), 0.1) 0px 10px,
    hsla(var(--hsl-form), 0.05) 0px 15px;
}
input:focus + div,
textarea:focus + div {
  color: white;
}
label:not([invalid])>input:valid,
label:not([invalid])>textarea:valid {
  background-color: hsl(var(--hsl-input--ok));
}
/*
form[validated="true"] label[invalid]>input,
form[validated="true"] label[invalid]>textarea {
}
*/


@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  position: relative;
  font-weight: normal;
  user-select: none;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}
img {
  user-select: none;
  pointer-events: none;
}

#app {
  margin: 0 auto;
  text-align: center;
  min-height: 100vh;
  height: 100lvh;
}

button {
  color: inherit;
}
a, a:visited, a:active {
  text-decoration: none;
  color: inherit;
}
svg {
  fill: currentColor;
}

.icon {
  color: inherit;
  --size: var(--icon-size, 32px);
  height: var(--size);
  width: var(--size);
}

.btn--icon {
  --btn-size: var(--btn-icon-size, 40px);
  width: var(--btn-size);
  height: var(--btn-size);
  border-radius: 8px;
  background-color: rgba(250, 250, 250, 0);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  will-change: background-color;
  transition: background-color 200ms ease-in-out;
}
.btn--icon:hover {
  background-color: rgba(250, 250, 250, 0.2);
}

button:hover {
  cursor: pointer;
}

  /*
  KEYFRAMES
  */
  @keyframes slide-in-L {
    from {
      transform: translateX(-50px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  @keyframes slide-in-R {
    from {
      transform: translateX(50px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  @keyframes slide-in-U {
    from {
      transform: translateY(-50px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  @keyframes slide-in-D {
    from {
      transform: translateY(50px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  @keyframes grow-in {
    from {
      transform: scale(0);
    }
    to {
      transform: scale(1);
    }
  }
  @keyframes shrink-in {
    from {
      transform: scale(var(--scale-a, 1.5));
    }
    to {
      transform: scale(var(--scale-b, 1));
    }
  }